name: CI - scan and build image

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  # schedule:
  #   - cron: '45 17 * * 1'
  workflow_dispatch:

permissions:
  contents: read

env:
  AWS_REGION: us-east-2                   
  IMAGE_REPOSITORY: log4shell-vulnerable-app 

jobs:
  # checkov_scan:
  #   permissions:
  #     contents: read 
  #     security-events: write 
  #     actions: read 
  #   runs-on: ubuntu-latest
  #   name: Run Checkov Code Scan
  #   environment: PrismaCloudEnv
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@master
  #     - id: code-scan
  #       name: Checkov GitHub Action
  #       uses:  bridgecrewio/checkov-action@master
  #       with:
  #         output_format: cli,sarif
  #         output_file_path: console,results.sarif
  #         api-key: ${{ secrets.BC_API_KEY }}
  #         prisma-api-url: ${{ secrets.PRISMA_CLOUD_API_URL }}
  #         directory: '.'
  #         soft_fail: true
  #         use_enforcement_rules: false
  #     - name: Upload SARIF file
  #       uses: github/codeql-action/upload-sarif@v3
  #       if: success() || failure()
  #       with:
  #         sarif_file: results.sarif
  
  build:
    # needs: checkov_scan
    runs-on: ubuntu-latest
    name: Build Image and Push to Registry
    # environment: DockerEnv
    environment: AWSEnv
    steps:
    - name: Get short SHA
      run: echo "GHA_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
          
    # - name: Docker Login
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: ECR Login
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@master

    - name: Tag and Push Docker images
      uses: docker/build-push-action@master
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.GHA_SHA }}
      with:
        # tags: ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_REPOSITORY:$IMAGE_TAG, $ECR_REGISTRY/$IMAGE_REPOSITORY:$IMAGE_TAG
        tags: $ECR_REGISTRY/$IMAGE_REPOSITORY:$IMAGE_TAG
        push: true
        provenance: false
